it is a configuration management tool.
ansible work on pushed based mechanism
for installation:-

sudo apt-add-repositoryppa:ansible/ansible
sudo apt update 
sudo apt install ansible 



if we need to manage GIVEN SERVER (thre server) so we should write the public IP into host file 

[Server]
Server_1 ansible_host = 18.209.43.91
Server_2 ansible_host = 18.209.43.91
Server_3 ansible_host = 18.209.43.91


[{

Syntax of Ansible 


Key-Value Pairs (Mappings): Used for defining parameters, variables, and other configurations. Keys are followed by a colon and a space, then the value.
Code

    key: value

Lists (Sequences): Represented by a hyphen (-) followed by a space for each item in the list.
Code

    - item1
    - item2

}]


Ansible playbooks are written in YAML and used to automate tasks across systems.
---

🛠 Basic Structure of an Ansible Playbook

`yaml
- name: Playbook Name
  hosts: target_group
  become: yes  # for privilege escalation
  tasks:
    - name: Task description
      module_name:
        option1: value1
        option2: value2
`

---

📦 Example 1: Install Apache on Ubuntu

`yaml
- name: Install Apache Web Server
  hosts: webservers
  become: yes
  tasks:
    - name: Install apache2 package
      apt:
        name: apache2
        state: present
        update_cache: yes
`

---

👤 Example 2: Create a User

`yaml
- name: Create a new user
  hosts: all
  become: yes
  tasks:
    - name: Add user 'john'
      user:
        name: john
        state: present
        shell: /bin/bash
`

---

🔄 Example 3: Start and Enable a Service

`yaml
- name: Ensure Apache is running
  hosts: webservers
  become: yes
  tasks:
    - name: Start and enable apache2
      service:
        name: apache2
        state: started
        enabled: yes
`

---

📁 Example 4: Copy a File

`yaml
- name: Copy index.html to web server
  hosts: webservers
  become: yes
  tasks:
    - name: Copy file
      copy:
        src: /home/user/index.html
        dest: /var/www/html/index.html







Absolutely! In IT companies, Ansible playbooks are widely used for automating infrastructure tasks, application deployment, configuration management, and more. 



🖥️ 1. Server Provisioning (Linux)
 
`yaml
- name: Provision Linux servers
  hosts: new_servers
  become: yes
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install essential packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - curl
        - vim
`

📌 Used for setting up new servers with baseline tools.



🌐 2. Web Application Deployment (e.g., Node.js)

`yaml
- name: Deploy Node.js App
  hosts: app_servers
  become: yes
  tasks:
    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    - name: Copy app files
      copy:
        src: /local/path/app/
        dest: /var/www/app/
        recursive: yes

    - name: Start app with PM2
      command: pm2 start /var/www/app/app.js
`

📌 Automates deployment of a Node.js application.



🔐 3. Security Hardening

`yaml
- name: Basic Security Setup
  hosts: all
  become: yes
  tasks:
    - name: Disable root SSH login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'

    - name: Restart SSH service
      service:
        name: ssh
        state: restarted
`

📌 Used to enforce security policies across servers.



📦 4. Docker Installation

`yaml
- name: Install Docker
  hosts: docker_hosts
  become: yes
  tasks:
    - name: Install dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
`

📌 Sets up Docker on target machines for containerized deployments.



📊 5. Monitoring Agent Installation (e.g., Prometheus Node Exporter)

`yaml
- name: Install Prometheus Node Exporter
  hosts: monitoring_targets
  become: yes
  tasks:
    - name: Download Node Exporter
      get_url:
        url: https://github.com/prometheus/nodeexporter/releases/download/v1.5.0/nodeexporter-1.5.0.linux-amd64.tar.gz
        dest: /tmp/node_exporter.tar.gz

    - name: Extract and move binary
      unarchive:
        src: /tmp/node_exporter.tar.gz
        dest: /usr/local/bin/
        remote_src: yes

    - name: Start Node Exporter
      command: /usr/local/bin/node_exporter &
`

📌 Used to install monitoring agents for infrastructure visibility.